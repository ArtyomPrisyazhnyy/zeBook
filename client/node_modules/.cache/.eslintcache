[{"D:\\bookStore\\client\\src\\index.js":"1","D:\\bookStore\\client\\src\\App.js":"2","D:\\bookStore\\client\\src\\reportWebVitals.js":"3","D:\\bookStore\\client\\src\\utils\\consts.js":"4","D:\\bookStore\\client\\src\\routes.js":"5","D:\\bookStore\\client\\src\\pages\\Basket.jsx":"6","D:\\bookStore\\client\\src\\store\\store.js":"7","D:\\bookStore\\client\\src\\store\\users-reducer.js":"8","D:\\bookStore\\client\\src\\store\\products-reducer.js":"9","D:\\bookStore\\client\\src\\components\\AppRouter\\AppRouter.jsx":"10","D:\\bookStore\\client\\src\\components\\navbar\\Navbar.jsx":"11","D:\\bookStore\\client\\src\\pages\\Auth\\Auth.jsx":"12","D:\\bookStore\\client\\src\\pages\\Shop\\Shop.jsx":"13","D:\\bookStore\\client\\src\\pages\\Shop\\WriterBar.jsx":"14","D:\\bookStore\\client\\src\\pages\\Shop\\GenreBar.jsx":"15","D:\\bookStore\\client\\src\\pages\\Shop\\ProductsList.jsx":"16","D:\\bookStore\\client\\src\\pages\\Shop\\ProductsItem.jsx":"17","D:\\bookStore\\client\\src\\pages\\productPage\\ProductPage.jsx":"18","D:\\bookStore\\client\\src\\pages\\Admin\\Admin.jsx":"19","D:\\bookStore\\client\\src\\components\\modals\\CreateWriter.jsx":"20","D:\\bookStore\\client\\src\\components\\modals\\CreateGenre.jsx":"21","D:\\bookStore\\client\\src\\components\\modals\\CreateProduct.jsx":"22","D:\\bookStore\\client\\src\\http\\userAPI.js":"23","D:\\bookStore\\client\\src\\http\\api.js":"24","D:\\bookStore\\client\\src\\http\\productsAPI.js":"25","D:\\bookStore\\client\\src\\components\\pagination\\pagination.jsx":"26","D:\\bookStore\\client\\src\\components\\modals\\upgateProduct.jsx":"27","D:\\bookStore\\client\\src\\pages\\Basket\\basket.jsx":"28","D:\\bookStore\\client\\src\\redux\\store.js":"29","D:\\bookStore\\client\\src\\redux\\redusers\\index.js":"30","D:\\bookStore\\client\\src\\redux\\redusers\\users.js":"31","D:\\bookStore\\client\\src\\redux\\redusers\\products.js":"32","D:\\bookStore\\client\\src\\redux\\actions\\users.js":"33","D:\\bookStore\\client\\src\\redux\\actions\\products.js":"34","D:\\bookStore\\client\\src\\pages\\Basket\\basketContainer.jsx":"35"},{"size":662,"mtime":1670362253960,"results":"36","hashOfConfig":"37"},{"size":294,"mtime":1678997789046,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":241,"mtime":1679323531362,"results":"40","hashOfConfig":"37"},{"size":850,"mtime":1699752119065,"results":"41","hashOfConfig":"37"},{"size":146,"mtime":1650059449731,"results":"42","hashOfConfig":"43"},{"size":435,"mtime":1670347493870,"results":"44","hashOfConfig":"43"},{"size":856,"mtime":1669191367667,"results":"45","hashOfConfig":"43"},{"size":2364,"mtime":1650918198992,"results":"46","hashOfConfig":"43"},{"size":896,"mtime":1699752241421,"results":"47","hashOfConfig":"37"},{"size":4099,"mtime":1699752299945,"results":"48","hashOfConfig":"37"},{"size":2977,"mtime":1699752336772,"results":"49","hashOfConfig":"37"},{"size":2480,"mtime":1699754698256,"results":"50","hashOfConfig":"37"},{"size":673,"mtime":1670674120975,"results":"51","hashOfConfig":"37"},{"size":553,"mtime":1670674040595,"results":"52","hashOfConfig":"37"},{"size":668,"mtime":1670675826477,"results":"53","hashOfConfig":"37"},{"size":1235,"mtime":1670676016498,"results":"54","hashOfConfig":"37"},{"size":6554,"mtime":1699754456347,"results":"55","hashOfConfig":"37"},{"size":1598,"mtime":1673451816984,"results":"56","hashOfConfig":"37"},{"size":1718,"mtime":1672425644896,"results":"57","hashOfConfig":"37"},{"size":1666,"mtime":1672425657668,"results":"58","hashOfConfig":"37"},{"size":9219,"mtime":1672424939086,"results":"59","hashOfConfig":"37"},{"size":512,"mtime":1650383680763,"results":"60","hashOfConfig":"37"},{"size":428,"mtime":1679226861991,"results":"61","hashOfConfig":"37"},{"size":2806,"mtime":1684005404452,"results":"62","hashOfConfig":"37"},{"size":995,"mtime":1670447634505,"results":"63","hashOfConfig":"37"},{"size":10427,"mtime":1672426205872,"results":"64","hashOfConfig":"37"},{"size":4308,"mtime":1686519501769,"results":"65","hashOfConfig":"37"},{"size":372,"mtime":1678995508411,"results":"66","hashOfConfig":"37"},{"size":260,"mtime":1670358603060,"results":"67","hashOfConfig":"37"},{"size":667,"mtime":1699753316314,"results":"68","hashOfConfig":"37"},{"size":1881,"mtime":1699754629728,"results":"69","hashOfConfig":"37"},{"size":236,"mtime":1669191075463,"results":"70","hashOfConfig":"37"},{"size":1808,"mtime":1672425926736,"results":"71","hashOfConfig":"37"},{"size":502,"mtime":1650807902157,"results":"72","hashOfConfig":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"172zgi",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1qwpe6r",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"77"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"77"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"77"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"77"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18l5k9i","D:\\bookStore\\client\\src\\index.js",[],[],[],"D:\\bookStore\\client\\src\\App.js",[],[],"D:\\bookStore\\client\\src\\reportWebVitals.js",[],[],"D:\\bookStore\\client\\src\\utils\\consts.js",[],[],"D:\\bookStore\\client\\src\\routes.js",[],[],"D:\\bookStore\\client\\src\\pages\\Basket.jsx",[],[],[],"D:\\bookStore\\client\\src\\store\\store.js",[],[],"D:\\bookStore\\client\\src\\store\\users-reducer.js",[],[],"D:\\bookStore\\client\\src\\store\\products-reducer.js",[],[],[],"D:\\bookStore\\client\\src\\components\\AppRouter\\AppRouter.jsx",[],[],"D:\\bookStore\\client\\src\\components\\navbar\\Navbar.jsx",["188","189","190"],[],"import React, { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { ADMIN_ROUTE, BASKET_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, REGISTRATION_ROUTE } from '../../utils/consts';\r\nimport { fetchProducts } from '../../http/productsAPI';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsAuth, setIsAdmin } from '../../redux/actions/users';\r\nimport { setSelectedWriter, setSelectedGenre, setSearchingProduct, setProducts, setTotalCount } from '../../redux/actions/products';\r\n\r\nconst NavBar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAdmin, isAuth } = useSelector(({ usersPage }) => usersPage);\r\n\r\n    const limit = useSelector(({ productsPage }) => productsPage.limit);\r\n    const search = useSelector(({ productsPage }) => productsPage.searchingProduct);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const searchProduct = () => {\r\n        if (search != 0) {\r\n            dispatch(setSelectedWriter({}));\r\n            dispatch(setSelectedGenre({}));\r\n            navigate(MAIN_ROUTE)\r\n            fetchProducts(null, null, 1, limit, search.toLowerCase())\r\n                .then(data => {\r\n                    dispatch(setProducts(data.rows));\r\n                    dispatch(setTotalCount(data.count));\r\n                    if (data.count != 0) {\r\n                        dispatch(setSearchingProduct(\"\"));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('isAdmin');\r\n        dispatch(setIsAuth(!!localStorage.getItem('token')));\r\n        dispatch(setIsAdmin(!!localStorage.getItem('isAdmin')));\r\n        navigate(LOGIN_ROUTE);\r\n\r\n    }\r\n\r\n\r\n    const zeBook = () => {\r\n        dispatch(setSelectedWriter({}));\r\n        dispatch(setSelectedGenre({}));\r\n        dispatch(setSearchingProduct(\"\"));\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__indent\">\r\n\r\n                {isAuth && isAdmin &&\r\n                    <div\r\n                        className=\"navbar_Link\"\r\n                        onClick={() => {\r\n                            navigate(ADMIN_ROUTE)\r\n                        }}>Админ панель</div>\r\n                }\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"header__inner\">\r\n                    <NavLink\r\n                        to={MAIN_ROUTE}\r\n                        className=\"shop_title\"\r\n                        onClick={zeBook}>zeBook\r\n                    </NavLink>\r\n\r\n                    <div className=\"search\">\r\n                        <input id=\"navbar_search\"\r\n                            className=\"search__input\"\r\n                            placeholder=\"Введите название\"\r\n                            value={search}\r\n                            onChange={e => dispatch(setSearchingProduct(e.target.value))}\r\n                            autoComplete=\"off\" />\r\n\r\n                        <div className=\"search_btn\"\r\n                            onClick={searchProduct}>\r\n                            Поиск\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isAuth ?\r\n                        <nav>\r\n\r\n                            <div\r\n                                className=\"navbar_Link\"\r\n                                onClick={() => {\r\n                                    navigate(BASKET_ROUTE)\r\n                                }}>Корзина\r\n                            </div>\r\n                            <div\r\n                                className=\"navbar_Link\"\r\n                                onClick={() => {\r\n                                    logout()\r\n                                }}>Выйти</div>\r\n                        </nav>\r\n                        :\r\n                        <button onClick={() => navigate(REGISTRATION_ROUTE)}>Авторизация</button>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar","D:\\bookStore\\client\\src\\pages\\Auth\\Auth.jsx",[],[],"D:\\bookStore\\client\\src\\pages\\Shop\\Shop.jsx",["191","192","193"],[],"D:\\bookStore\\client\\src\\pages\\Shop\\WriterBar.jsx",[],[],"D:\\bookStore\\client\\src\\pages\\Shop\\GenreBar.jsx",[],[],"D:\\bookStore\\client\\src\\pages\\Shop\\ProductsList.jsx",[],[],"D:\\bookStore\\client\\src\\pages\\Shop\\ProductsItem.jsx",[],[],"D:\\bookStore\\client\\src\\pages\\productPage\\ProductPage.jsx",["194","195","196","197","198"],[],"D:\\bookStore\\client\\src\\pages\\Admin\\Admin.jsx",[],[],"D:\\bookStore\\client\\src\\components\\modals\\CreateWriter.jsx",[],[],"D:\\bookStore\\client\\src\\components\\modals\\CreateGenre.jsx",[],[],"D:\\bookStore\\client\\src\\components\\modals\\CreateProduct.jsx",["199"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createProduct } from '../../http/productsAPI'\r\nimport { fetchByCategory, setSelectedGenre, setSelectedWriter } from \"../../redux/actions/products\";\r\n\r\nconst CreateProduct = ({ onHide, show }) => {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(({ productsPage }) => productsPage);\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [file, setFile] = useState(null)\r\n    const [edition, setEdition] = useState('')\r\n    const [productYear, setProductYear] = useState('')\r\n    const [pageCount, setPageCount] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchByCategory());\r\n    }, [])\r\n\r\n    const selectFile = (e) => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addProduct = () => {\r\n        const formData = new FormData();\r\n        try {\r\n            formData.append('title', name)\r\n            formData.append('price', Number(price))\r\n            formData.append('image', file)\r\n            formData.append('genreId', products.selectedGenre.id)\r\n            formData.append('writerId', products.selectedWriter.id)\r\n            formData.append('productionYear', Number(productYear))\r\n            formData.append('pageCount', Number(pageCount))\r\n            formData.append('edition', edition)\r\n            formData.append('productDescription', description)\r\n\r\n            createProduct(formData).then(data => {\r\n                setName('')\r\n                setPrice('')\r\n                setFile(null)\r\n                setEdition('')\r\n                setProductYear('')\r\n                setPageCount('')\r\n                setDescription('')\r\n                dispatch(setSelectedGenre(null))\r\n                dispatch(setSelectedWriter(null))\r\n                onHide(false)\r\n            })\r\n        } catch (e) {\r\n            alert(\"Неудалось добавить товар\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {show &&\r\n                <div className=\"modal\">\r\n                    <div className=\"modal__content\">\r\n                        <div className=\"modal__title\">Добавить товар</div>\r\n                        <form action=\"/\" method=\"post\">\r\n\r\n                            <div className=\"drop\">\r\n                                <div className=\"drop_name\">\r\n                                    Автор: {products.selectedWriter.name}\r\n                                </div>\r\n                                <div className=\"dropdown\">\r\n\r\n                                    <div className=\"listTitle\">Выбрать автора</div>\r\n                                    <div className=\"dropdown_content\">\r\n                                        {products.writer.map(writer =>\r\n                                            <div className=\"dropdown_item\"\r\n                                                onClick={() => dispatch(setSelectedWriter(writer))}\r\n                                                key={writer.id}\r\n                                            >\r\n                                                {writer.name}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"drop\">\r\n                                <div className=\"drop_name\">\r\n                                    Жанр: {products.selectedGenre.name}\r\n                                </div>\r\n                                <div className=\"dropdown\">\r\n\r\n                                    <div className=\"listTitle\">Выбрать жанр</div>\r\n                                    <div className=\"dropdown_content\">\r\n                                        {products.genre.map(genre =>\r\n                                            <div className=\"dropdown_item\"\r\n                                                onClick={() => dispatch(setSelectedGenre(genre))}\r\n                                                key={genre.id}\r\n                                            >\r\n                                                {genre.name}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">Название товара:</div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите название товара\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">Стоимость товара:</div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите стоимость товара\"\r\n                                    value={price}\r\n                                    onChange={e => setPrice(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">Издательство:</div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите издательство\"\r\n                                    value={edition}\r\n                                    onChange={e => setEdition(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">Год выпуска:</div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите год выпуска товара\"\r\n                                    value={productYear}\r\n                                    onChange={e => setProductYear(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">Количество страниц:</div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите количество страниц\"\r\n                                    value={pageCount}\r\n                                    onChange={e => setPageCount(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">Описание товара:</div>\r\n                                <textarea\r\n                                    className=\"form__textarea\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите описание товара\"\r\n                                    value={description}\r\n                                    onChange={e => setDescription(e.target.value)}\r\n                                ></textarea>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"addIMG\">Выберите изображение:</div>\r\n                            <input\r\n                                type=\"file\"\r\n                                onChange={selectFile}\r\n                            ></input>\r\n                        </form>\r\n\r\n                        <div className=\"modal__buttons\">\r\n                            <div className=\"modal__btn modal__add\"\r\n                                onClick={() => onHide(false)}>\r\n                                закрыть\r\n                            </div>\r\n                            <div\r\n                                className=\"modal__btn modal__close\"\r\n                                onClick={addProduct}>добавить</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateProduct;","D:\\bookStore\\client\\src\\http\\userAPI.js",["200"],[],"import { $authHost, $host } from \"./api\";\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const registration = async (email, password) => {\r\n    const {data} = await $host.post('auth/registration', {email, password})\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token);\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const {data} = await $host.post('auth/login', {email, password})\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token);\r\n}\r\n","D:\\bookStore\\client\\src\\http\\api.js",[],[],"D:\\bookStore\\client\\src\\http\\productsAPI.js",["201"],[],"import { $authHost, $host } from \"./api\";\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const createWriter = async (name) => {\r\n    const { data } = await $authHost.post('product/writer', name);\r\n    return data;\r\n}\r\n\r\nexport const fetchWriters = async () => {\r\n    const { data } = await $host.get('product/writer');\r\n    return data;\r\n}\r\n\r\nexport const createGenre = async (name) => {\r\n    const { data } = await $authHost.post('product/genre', name);\r\n    return data;\r\n}\r\n\r\nexport const fetchGenres = async () => {\r\n    const { data } = await $host.get('product/genre');\r\n    return data;\r\n}\r\n\r\nexport const createProduct = async (product) => {\r\n    const { data } = await $authHost.post('product', product, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const updateProduct = async (id, product) => {\r\n    const { data } = await $authHost.put(`product/${id}`, product, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const fetchProducts = async (writerId, genreId, page, limit, titleLowerCase) => {\r\n    const { data } = await $host.get('product', {\r\n        params: {\r\n            writerId, genreId, page, limit, titleLowerCase\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const fetchOneProduct = async (id) => {\r\n    const { data } = await $host.get(`product/${id}`);\r\n    return data;\r\n}\r\n\r\nexport const deleteProduct = async (id) => {\r\n    const { data } = await $authHost.delete(`product/${id}`);\r\n    return data\r\n}\r\n\r\nexport const addToBasket = async (productId, writerId, genreId) => {\r\n    const { data } = await $authHost.post('basket', productId, writerId, genreId)\r\n    return data\r\n}\r\n\r\nexport const getBasket = async () => {\r\n    const { data } = await $authHost.get('basket')\r\n    return data\r\n}\r\n\r\nexport const cleanBasket = async () => {\r\n    const { data } = await $authHost.delete('basket/clean/0')\r\n    return data\r\n}\r\n\r\nexport const removeFromBasket = async (productId) => {\r\n    const { data } = await $authHost.delete(`basket/${productId}`)\r\n    return data\r\n}\r\n\r\nexport const getRatingForProduct = async (productId) => {\r\n    const { data } = await $host.get(`product/rating/${productId}`);\r\n    return data\r\n}\r\n\r\nexport const postRatingForProduct = async (productId, rate) => {\r\n    const { data } = await $authHost.post('product/rating', productId,\r\n        rate);\r\n    return data\r\n}\r\n\r\nexport const removeRatingForProduct = async (productId) => {\r\n    const { data } = await $authHost.delete(`product/rating/${productId}`);\r\n    return data\r\n}\r\n\r\nexport const updateRatingForProduct = async (productId, rate) => {\r\n    const { data } = await $authHost.put(`product/rating/${productId}`, rate);\r\n    return data\r\n}","D:\\bookStore\\client\\src\\components\\pagination\\pagination.jsx",[],[],"D:\\bookStore\\client\\src\\components\\modals\\upgateProduct.jsx",["202","203","204","205"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchOneProduct, fetchWriters, updateProduct } from \"../../http/productsAPI\";\r\n\r\nconst UpdateProduct = (props) => {\r\n    const dispatch = useDispatch();\r\n    const onHide = props.onHide\r\n    const show = props.show;\r\n    const productsPage = useSelector(({ productsPage }) => productsPage)\r\n\r\n    const [product, setProduct] = useState({ info: [] })\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        fetchOneProduct(id).then(data => setProduct(data))\r\n    }, [])\r\n\r\n\r\n    const [name, setName] = useState(product.title)\r\n    const [writer, setWriters] = useState(product.writer);\r\n    const [genre, setGenres] = useState(product.genre);\r\n    const [price, setPrice] = useState(product.price)\r\n    const [file, setFile] = useState(null)\r\n    const [edition, setEdition] = useState(product.edition)\r\n    const [productYear, setProductYear] = useState(product.productionYear)\r\n    const [pageCount, setPageCount] = useState(product.pageCount)\r\n    const [description, setDescription] = useState(product.productDescription)\r\n\r\n\r\n    useEffect(() => {\r\n        setName(product.title);\r\n        setWriters(product.writer);\r\n        setGenres(product.genre)\r\n        setPrice(product.price);\r\n        setEdition(product.edition);\r\n        setProductYear(product.productionYear);\r\n        setPageCount(product.pageCount);\r\n        setDescription(product.productDescription);\r\n        fetchOneProduct(id).then(data => setProduct(data))\r\n    }, [show])\r\n\r\n    const selectFile = (e) => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const editProduct = () => {\r\n        const formData = new FormData();\r\n        try {\r\n            formData.append('title', name)\r\n            formData.append('price', Number(price))\r\n            formData.append('image', file)\r\n            formData.append('genreId', Number(genre.id))\r\n            formData.append('writerId', Number(writer.id))\r\n            formData.append('productionYear', Number(productYear))\r\n            formData.append('pageCount', Number(pageCount))\r\n            formData.append('edition', edition)\r\n            formData.append('productDescription', description)\r\n\r\n            updateProduct(product.id, formData).then(data => {\r\n\r\n                onHide(false)\r\n            })\r\n        } catch (e) {\r\n            alert(\"Неудалось добавить товар\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {show\r\n                ?\r\n                <div className=\"modal\">\r\n                    <div className=\"modal__content\">\r\n                        <div className=\"modal__title\">Добавить товар</div>\r\n                        <form action=\"/\" method=\"post\">\r\n\r\n                            <div className=\"drop\">\r\n                                <div className=\"drop_name\">\r\n                                    Автор: {writer && writer.name}\r\n                                </div>\r\n                                <div className=\"dropdown\">\r\n\r\n                                    <div className=\"listTitle\">\r\n                                        Выбрать автора\r\n                                    </div>\r\n                                    <div className=\"dropdown_content\">\r\n                                        {productsPage.writer.map(writers =>\r\n                                            <div\r\n                                                className=\"dropdown_item\"\r\n                                                onClick={() => setWriters(writers)}\r\n                                                key={writers.id}\r\n                                            >\r\n                                                {writers.name}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"drop\">\r\n                                <div className=\"drop_name\">\r\n                                    Жанр: {genre && genre.name}\r\n                                </div>\r\n                                <div className=\"dropdown\">\r\n\r\n                                    <div className=\"listTitle\">\r\n                                        Выбрать жанр\r\n                                    </div>\r\n                                    <div className=\"dropdown_content\">\r\n                                        {productsPage.genre.map(genres =>\r\n                                            <div\r\n                                                className=\"dropdown_item\"\r\n                                                onClick={() => setGenres(genres)}\r\n                                                key={genres.id}>\r\n                                                {genres.name}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">\r\n                                    Название товара:\r\n                                </div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите название товара\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">\r\n                                    Стоимость товара:\r\n                                </div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите стоимость товара\"\r\n                                    value={price}\r\n                                    onChange={e => setPrice(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">\r\n                                    Издательство:\r\n                                </div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите издательство\"\r\n                                    value={edition}\r\n                                    onChange={e => setEdition(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">\r\n                                    Год выпуска:\r\n                                </div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите год выпуска товара\"\r\n                                    value={productYear}\r\n                                    onChange={e => setProductYear(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">\r\n                                    Количество страниц:\r\n                                </div>\r\n                                <input\r\n                                    className=\"form__control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите количество страниц\"\r\n                                    value={pageCount}\r\n                                    onChange={e => setPageCount(e.target.value)}\r\n                                ></input>\r\n                            </div>\r\n\r\n                            <div className=\"form__inner\">\r\n                                <div className=\"form_title\">\r\n                                    Описание товара:\r\n                                </div>\r\n                                <textarea\r\n                                    className=\"form__textarea\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите описание товара\"\r\n                                    value={description}\r\n                                    onChange={e => setDescription(e.target.value)}\r\n                                ></textarea>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"addIMG\">\r\n                                Выберите изображение:\r\n                            </div>\r\n                            <input\r\n                                type=\"file\"\r\n                                onChange={selectFile}\r\n                            ></input>\r\n                        </form>\r\n\r\n                        <div className=\"modal__buttons\">\r\n                            <div className=\"modal__btn modal__add\"\r\n                                onClick={() => onHide(false)}>\r\n                                закрыть\r\n                            </div>\r\n                            <div\r\n                                className=\"modal__btn modal__close\"\r\n                                onClick={editProduct}>Сохранить изменения</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct;","D:\\bookStore\\client\\src\\pages\\Basket\\basket.jsx",["206","207","208"],[],"import React, { useEffect } from \"react\";\r\nimport { cleanBasket, getBasket, removeFromBasket } from \"../../http/productsAPI\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PRODUCTS_ROUTE } from \"../../utils/consts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Basket = (props) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const productsPage = useSelector(({ productsPage }) => productsPage);\r\n    const setBaskets = props.setBaskets;\r\n\r\n    useEffect(() => {\r\n        getBasket().then(data => {\r\n            setBaskets(data)\r\n        })\r\n    }, [])\r\n\r\n    let prices = 0;\r\n    {\r\n        productsPage.baskets.map(price =>\r\n\r\n            prices = parseFloat((prices + price.product.price).toFixed(10))\r\n        )\r\n    }\r\n\r\n    const cleanAllBasket = () => {\r\n        cleanBasket().then(() => {\r\n            setBaskets([])\r\n        })\r\n    }\r\n\r\n    const removeBasketItem = (id) => {\r\n        removeFromBasket(id).then(() => {\r\n            getBasket().then(data => {\r\n                setBaskets(data)\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"basketPage\">\r\n            <div className=\"container\">\r\n                <div className=\"basket_title\">Корзина</div>\r\n\r\n                <div className=\"total_basket\" >\r\n                    <div className=\"total_price\">\r\n                        <span>Итого: </span>{prices} BYN\r\n                    </div>\r\n                    <div className=\"clean_basket\"\r\n                        onClick={cleanAllBasket}>\r\n                        Очистить корзину\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"basket_list\">\r\n                    {productsPage.baskets.map(basketItem =>\r\n                        <div key={basketItem.id} className=\"basket_li\">\r\n                            <div\r\n                                className=\"basket_item\"\r\n                                onClick={() => navigate(PRODUCTS_ROUTE + '/' + basketItem.productId)}>\r\n                                <div className=\"basket_img\">\r\n                                    <img\r\n                                        src={process.env.REACT_APP_API_URL + basketItem.product.image} alt=\"/\" />\r\n                                </div>\r\n\r\n                                <div className=\"basketItem__Inner\">\r\n                                    <div className=\"productNameBasket\">\r\n                                        {basketItem.product.title}\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"productsParam\">Автор</div>\r\n                                    <div className=\"productsdesc\">\r\n                                        {basketItem.writer.name}\r\n                                    </div>\r\n\r\n                                    <div className=\"productsParam\">Жанр</div>\r\n                                    <div className=\"productsdesc\">\r\n                                        {basketItem.genre.name}\r\n                                    </div>\r\n\r\n                                    <div className=\"productsinfo\">\r\n                                        Год издания: {basketItem.product.productionYear}\r\n                                    </div>\r\n\r\n                                    <div className=\"productsinfo\">\r\n                                        Количиество страниц: {basketItem.product.pageCount}\r\n                                    </div>\r\n\r\n                                    <div className=\"productsinfo\">\r\n                                        Издательство: {basketItem.product.edition}\r\n                                    </div>\r\n\r\n                                    <div className=\"price\">{basketItem.product.price} BYN/Шт</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"remove_btn\"\r\n                                onClick={() => removeBasketItem(basketItem.productId)}\r\n                            >Удалить</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Basket","D:\\bookStore\\client\\src\\redux\\store.js",[],[],"D:\\bookStore\\client\\src\\redux\\redusers\\index.js",[],[],"D:\\bookStore\\client\\src\\redux\\redusers\\users.js",[],[],"D:\\bookStore\\client\\src\\redux\\redusers\\products.js",[],[],"D:\\bookStore\\client\\src\\redux\\actions\\users.js",[],[],"D:\\bookStore\\client\\src\\redux\\actions\\products.js",[],[],"D:\\bookStore\\client\\src\\pages\\Basket\\basketContainer.jsx",[],[],{"ruleId":"209","severity":1,"message":"210","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":20,"column":20,"nodeType":"215","messageId":"216","endLine":20,"endColumn":22},{"ruleId":"213","severity":1,"message":"214","line":28,"column":36,"nodeType":"215","messageId":"216","endLine":28,"endColumn":38},{"ruleId":"209","severity":1,"message":"217","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":28},{"ruleId":"218","severity":1,"message":"219","line":26,"column":8,"nodeType":"220","endLine":26,"endColumn":10,"suggestions":"221"},{"ruleId":"218","severity":1,"message":"222","line":30,"column":8,"nodeType":"220","endLine":30,"endColumn":45,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":27,"column":30,"nodeType":"226","messageId":"227","endLine":27,"endColumn":32},{"ruleId":"218","severity":1,"message":"228","line":35,"column":8,"nodeType":"220","endLine":35,"endColumn":24,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":74,"column":37,"nodeType":"232","endLine":77,"endColumn":71},{"ruleId":"230","severity":1,"message":"231","line":78,"column":37,"nodeType":"232","endLine":81,"endColumn":65},{"ruleId":"230","severity":1,"message":"231","line":91,"column":33,"nodeType":"232","endLine":93,"endColumn":94},{"ruleId":"218","severity":1,"message":"219","line":20,"column":8,"nodeType":"220","endLine":20,"endColumn":10,"suggestions":"233"},{"ruleId":"209","severity":1,"message":"234","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":19},{"ruleId":"209","severity":1,"message":"235","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":18},{"ruleId":"209","severity":1,"message":"236","line":4,"column":27,"nodeType":"211","messageId":"212","endLine":4,"endColumn":39},{"ruleId":"209","severity":1,"message":"237","line":7,"column":11,"nodeType":"211","messageId":"212","endLine":7,"endColumn":19},{"ruleId":"218","severity":1,"message":"238","line":17,"column":8,"nodeType":"220","endLine":17,"endColumn":10,"suggestions":"239"},{"ruleId":"218","severity":1,"message":"240","line":41,"column":8,"nodeType":"220","endLine":41,"endColumn":14,"suggestions":"241"},{"ruleId":"209","severity":1,"message":"237","line":9,"column":11,"nodeType":"211","messageId":"212","endLine":9,"endColumn":19},{"ruleId":"218","severity":1,"message":"242","line":17,"column":8,"nodeType":"220","endLine":17,"endColumn":10,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":20,"column":5,"nodeType":"246","messageId":"247","endLine":25,"endColumn":6},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["248"],"React Hook useEffect has missing dependencies: 'dispatch', 'limit', and 'searchingProduct'. Either include them or remove the dependency array.",["249"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["250"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["251"],"'$authHost' is defined but never used.","'jwt_decode' is defined but never used.","'fetchWriters' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["252"],"React Hook useEffect has missing dependencies: 'id', 'product.edition', 'product.genre', 'product.pageCount', 'product.price', 'product.productDescription', 'product.productionYear', 'product.title', and 'product.writer'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setName' needs the current value of 'product.title'.",["253"],"React Hook useEffect has a missing dependency: 'setBaskets'. Either include it or remove the dependency array.",["254"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"255","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [dispatch]",{"range":"268","text":"269"},"Update the dependencies array to be: [dispatch, limit, page, searchingProduct, selectedGenre, selectedWriter]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch, id, productVisible]",{"range":"272","text":"273"},{"range":"274","text":"269"},"Update the dependencies array to be: [id]",{"range":"275","text":"276"},"Update the dependencies array to be: [id, product.edition, product.genre, product.pageCount, product.price, product.productDescription, product.productionYear, product.title, product.writer, show]",{"range":"277","text":"278"},"Update the dependencies array to be: [setBaskets]",{"range":"279","text":"280"},[854,856],"[dispatch]",[998,1035],"[dispatch, limit, page, searchingProduct, selectedGenre, selectedWriter]",[1350,1366],"[dispatch, id, productVisible]",[839,841],[642,644],"[id]",[1618,1624],"[id, product.edition, product.genre, product.pageCount, product.price, product.productDescription, product.productionYear, product.title, product.writer, show]",[619,621],"[setBaskets]"]