{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nlet initialState = {\n  user: localStorage.getItem('token') ? jwt_decode(localStorage.getItem('token')) : null,\n  isAdmin: !!localStorage.getItem('isAdmin'),\n  isAuth: !!localStorage.getItem('token')\n};\n\nconst users = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    case \"SET_IS_ADMIN\":\n      return { ...state,\n        isAdmin: action.bool\n      };\n\n    case \"SET_IS_AUTH\":\n      return { ...state,\n        isAuth: action.bool\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default users;","map":{"version":3,"sources":["D:/bookStore/client/src/redux/redusers/users.js"],"names":["jwt_decode","initialState","user","localStorage","getItem","isAdmin","isAuth","users","state","action","type","bool"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCJ,UAAU,CAACG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAA1C,GAA4E,IADnE;AAEfC,EAAAA,OAAO,EAAE,CAAC,CAACF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAFI;AAGfE,EAAAA,MAAM,EAAE,CAAC,CAACH,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHK,CAAnB;;AAOA,MAAMG,KAAK,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAE5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYN,QAAAA,IAAI,EAAEO,MAAM,CAACP;AAAzB,OAAP;;AAEJ,SAAK,cAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAA5B,OAAP;;AAEJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAA3B,OAAP;;AAEJ;AACI,aAAOH,KAAP;AAXR;AAaH,CAfD;;AAiBA,eAAeD,KAAf","sourcesContent":["import jwt_decode from 'jwt-decode'\r\n\r\nlet initialState = {\r\n    user: localStorage.getItem('token') ? jwt_decode(localStorage.getItem('token')) : null,\r\n    isAdmin: !!localStorage.getItem('isAdmin'),\r\n    isAuth: !!localStorage.getItem('token')\r\n};\r\n\r\n\r\nconst users = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USER\":\r\n            return { ...state, user: action.user }\r\n\r\n        case \"SET_IS_ADMIN\":\r\n            return { ...state, isAdmin: action.bool }\r\n\r\n        case \"SET_IS_AUTH\":\r\n            return { ...state, isAuth: action.bool }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default users;"]},"metadata":{},"sourceType":"module"}