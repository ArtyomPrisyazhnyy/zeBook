{"ast":null,"code":"var _jsxFileName = \"D:\\\\bookStore\\\\client\\\\src\\\\components\\\\AppRouter.jsx\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Admin from '../pages/Admin';\nimport { authRoutes, publicRoutes } from '../routes';\nimport { SHOP_ROUTE } from '../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapDispatchToProps = dispacth => {};\n\nlet mapStateToProps = state => {\n  return {\n    userPage: state.userPage\n  };\n};\n\nconst AppRouter = state => {\n  const isAuth = true;\n  let user = store.getState().userPage;\n  console.log(user);\n  debugger;\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: SHOP_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["D:/bookStore/client/src/components/AppRouter.jsx"],"names":["React","Switch","Route","Redirect","Admin","authRoutes","publicRoutes","SHOP_ROUTE","mapDispatchToProps","dispacth","mapStateToProps","state","userPage","AppRouter","isAuth","user","store","getState","console","log","map","path","Component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAEA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc,CAEtC,CAFD;;AAIA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMC,SAAS,GAAIF,KAAD,IAAW;AACzB,QAAMG,MAAM,GAAG,IAAf;AAEA,MAAIC,IAAI,GAAGC,KAAK,CAACC,QAAN,GAAiBL,QAA5B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA;AACA,sBACE,QAAC,MAAD;AAAA,eACGD,MAAM,IAAIT,UAAU,CAACe,GAAX,CAAe;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACtB,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,SAAS,EAAEC,SAAzC;AAAoD,QAAA,KAAK;AAAzD,SAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,cADsB;AAAA,KAAf,CADb,EAIGf,YAAY,CAACc,GAAb,CAAiB;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACd,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,SAAS,EAAEC,SAAzC;AAAoD,QAAA,KAAK;AAAzD,SAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,cADc;AAAA,KAAjB,CAJH,eAOE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEd;AAAd;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWH,CAjBD;;KAAMM,S;AAmBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Admin from '../pages/Admin';\r\nimport { authRoutes, publicRoutes } from '../routes';\r\nimport { SHOP_ROUTE } from '../utils/consts';\r\n\r\nlet mapDispatchToProps = (dispacth) => {\r\n  \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    userPage: state.userPage,\r\n  }\r\n}\r\n\r\nconst AppRouter = (state) => {\r\n    const isAuth = true;\r\n\r\n    let user = store.getState().userPage\r\n    console.log(user)\r\n    debugger;\r\n    return(\r\n      <Switch>\r\n        {isAuth && authRoutes.map(({path, Component}) => \r\n            <Route key={path} path={path} component={Component} exact />\r\n        )}\r\n        {publicRoutes.map(({path, Component}) => \r\n            <Route key={path} path={path} component={Component} exact />\r\n        )}\r\n        <Redirect to={SHOP_ROUTE} />\r\n      </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}