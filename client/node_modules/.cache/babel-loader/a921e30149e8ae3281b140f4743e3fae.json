{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nconst SET_USER = \"SET_USER\";\nconst SET_IS_ADMIN = \"SET_IS_ADMIN\";\nconst SET_IS_AUTH = \"SET_IS_AUTH\";\nlet initialState = {\n  user: jwt_decode(localStorage.getItem('token')),\n  isAdmin: !!localStorage.getItem('isAdmin'),\n  isAuth: !!localStorage.getItem('token')\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state,\n        user: action.user\n      };\n\n    case SET_IS_ADMIN:\n      return { ...state,\n        isAdmin: action.bool\n      };\n\n    case SET_IS_AUTH:\n      return { ...state,\n        isAuth: action.bool\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserAc = user => ({\n  type: SET_USER,\n  user\n});\nexport const setIsAdminAC = bool => ({\n  type: SET_IS_ADMIN,\n  bool\n});\nexport const setIsAuthAC = bool => ({\n  type: SET_IS_AUTH,\n  bool\n});\nexport default usersReducer;","map":{"version":3,"sources":["D:/bookStore/client/src/store/users-reducer.js"],"names":["jwt_decode","SET_USER","SET_IS_ADMIN","SET_IS_AUTH","initialState","user","localStorage","getItem","isAdmin","isAuth","usersReducer","state","action","type","bool","setUserAc","setIsAdminAC","setIsAuthAC"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAEL,UAAU,CAACM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CADD;AAEfC,EAAAA,OAAO,EAAE,CAAC,CAACF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAFI;AAGfE,EAAAA,MAAM,EAAE,CAAC,CAACH,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHK,CAAnB;;AAMA,MAAMG,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYN,QAAAA,IAAI,EAAEO,MAAM,CAACP;AAAzB,OAAP;;AAEJ,SAAKH,YAAL;AACI,aAAO,EAAE,GAAGS,KAAL;AAAYH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAA5B,OAAP;;AAEJ,SAAKX,WAAL;AACI,aAAO,EAAE,GAAGQ,KAAL;AAAYF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAA3B,OAAP;;AAEJ;AACI,aAAOH,KAAP;AAXR;AAaH,CAfD;;AAiBA,OAAO,MAAMI,SAAS,GAAIV,IAAD,KAAW;AAAEQ,EAAAA,IAAI,EAAEZ,QAAR;AAAkBI,EAAAA;AAAlB,CAAX,CAAlB;AACP,OAAO,MAAMW,YAAY,GAAIF,IAAD,KAAW;AAAED,EAAAA,IAAI,EAAEX,YAAR;AAAsBY,EAAAA;AAAtB,CAAX,CAArB;AACP,OAAO,MAAMG,WAAW,GAAIH,IAAD,KAAW;AAAED,EAAAA,IAAI,EAAEV,WAAR;AAAqBW,EAAAA;AAArB,CAAX,CAApB;AAIP,eAAeJ,YAAf","sourcesContent":["import jwt_decode from 'jwt-decode'\r\n\r\nconst SET_USER = \"SET_USER\";\r\nconst SET_IS_ADMIN = \"SET_IS_ADMIN\";\r\nconst SET_IS_AUTH = \"SET_IS_AUTH\";\r\n\r\nlet initialState = {\r\n    user: jwt_decode(localStorage.getItem('token')),\r\n    isAdmin: !!localStorage.getItem('isAdmin'),\r\n    isAuth: !!localStorage.getItem('token')\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, user: action.user }\r\n\r\n        case SET_IS_ADMIN:\r\n            return { ...state, isAdmin: action.bool }\r\n\r\n        case SET_IS_AUTH:\r\n            return { ...state, isAuth: action.bool }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserAc = (user) => ({ type: SET_USER, user });\r\nexport const setIsAdminAC = (bool) => ({ type: SET_IS_ADMIN, bool });\r\nexport const setIsAuthAC = (bool) => ({ type: SET_IS_AUTH, bool });\r\n\r\n\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}