{"ast":null,"code":"import axios from \"axios\";\nimport { fetchProducts, fetchWriters, fetchGenres } from \"../../http/productsAPI\";\nexport const fetchProductsAction = (selectedWriter, selectedGenre, page, limit, searchingProduct) => dispatch => {\n  fetchProducts(selectedWriter.id, selectedGenre.id, page, limit, searchingProduct).then(data => {\n    dispatch(setProducts(data.rows));\n    dispatch(setTotalCount(data.count));\n  });\n};\nexport const fetchByCategory = () => dispatch => {\n  fetchWriters().then(data => {\n    dispatch(setWriter(data));\n  });\n  fetchGenres().then(data => {\n    dispatch(setGenre(data));\n  });\n};\nexport const setGenre = genre => ({\n  type: \"SET_GENRE\",\n  genre\n});\nexport const setWriter = writer => ({\n  type: \"SET_WRITER\",\n  writer\n});\nexport const setProducts = products => ({\n  type: \"SET_PRODUCTS\",\n  products\n});\nexport const setBaskets = baskets => ({\n  type: \"SET_BASKETS\",\n  baskets\n});\nexport const setSelectedGenre = selectedGenre => ({\n  type: \"SET_SELECTED_GENRE\",\n  selectedGenre\n});\nexport const setSelectedWriter = selectedWriter => ({\n  type: \"SET_SELECTED_WRITER\",\n  selectedWriter\n});\nexport const setPage = page => ({\n  type: \"SET_PAGE\",\n  page\n});\nexport const setTotalCount = totalCount => ({\n  type: \"SET_TOTAL\",\n  totalCount\n});\nexport const setSearchingProduct = searchingProduct => ({\n  type: \"SET_SEARCHING_PRODUCT\",\n  searchingProduct\n});","map":{"version":3,"sources":["D:/bookStore/client/src/redux/actions/products.js"],"names":["axios","fetchProducts","fetchWriters","fetchGenres","fetchProductsAction","selectedWriter","selectedGenre","page","limit","searchingProduct","dispatch","id","then","data","setProducts","rows","setTotalCount","count","fetchByCategory","setWriter","setGenre","genre","type","writer","products","setBaskets","baskets","setSelectedGenre","setSelectedWriter","setPage","totalCount","setSearchingProduct"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,WAAtC,QAAyD,wBAAzD;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,cAAD,EAAiBC,aAAjB,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,gBAA7C,KAAmEC,QAAD,IAAc;AAC/GT,EAAAA,aAAa,CAACI,cAAc,CAACM,EAAhB,EAAoBL,aAAa,CAACK,EAAlC,EAAsCJ,IAAtC,EAA4CC,KAA5C,EAAmDC,gBAAnD,CAAb,CACKG,IADL,CACUC,IAAI,IAAI;AACVH,IAAAA,QAAQ,CAACI,WAAW,CAACD,IAAI,CAACE,IAAN,CAAZ,CAAR;AACAL,IAAAA,QAAQ,CAACM,aAAa,CAACH,IAAI,CAACI,KAAN,CAAd,CAAR;AACH,GAJL;AAKH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAG,MAAOR,QAAD,IAAc;AAC/CR,EAAAA,YAAY,GAAGU,IAAf,CAAoBC,IAAI,IAAI;AACxBH,IAAAA,QAAQ,CAACS,SAAS,CAACN,IAAD,CAAV,CAAR;AACH,GAFD;AAGAV,EAAAA,WAAW,GAAGS,IAAd,CAAmBC,IAAI,IAAI;AACvBH,IAAAA,QAAQ,CAACU,QAAQ,CAACP,IAAD,CAAT,CAAR;AACH,GAFD;AAGH,CAPM;AASP,OAAO,MAAMO,QAAQ,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAE,WAD0B;AAEhCD,EAAAA;AAFgC,CAAZ,CAAjB;AAKP,OAAO,MAAMF,SAAS,GAAII,MAAD,KAAa;AAClCD,EAAAA,IAAI,EAAE,YAD4B;AAElCC,EAAAA;AAFkC,CAAb,CAAlB;AAKP,OAAO,MAAMT,WAAW,GAAIU,QAAD,KAAe;AACtCF,EAAAA,IAAI,EAAE,cADgC;AAEtCE,EAAAA;AAFsC,CAAf,CAApB;AAKP,OAAO,MAAMC,UAAU,GAAIC,OAAD,KAAc;AACpCJ,EAAAA,IAAI,EAAE,aAD8B;AAEpCI,EAAAA;AAFoC,CAAd,CAAnB;AAKP,OAAO,MAAMC,gBAAgB,GAAIrB,aAAD,KAAoB;AAChDgB,EAAAA,IAAI,EAAE,oBAD0C;AAEhDhB,EAAAA;AAFgD,CAApB,CAAzB;AAKP,OAAO,MAAMsB,iBAAiB,GAAIvB,cAAD,KAAqB;AAClDiB,EAAAA,IAAI,EAAE,qBAD4C;AAElDjB,EAAAA;AAFkD,CAArB,CAA1B;AAKP,OAAO,MAAMwB,OAAO,GAAItB,IAAD,KAAW;AAC9Be,EAAAA,IAAI,EAAE,UADwB;AAE9Bf,EAAAA;AAF8B,CAAX,CAAhB;AAKP,OAAO,MAAMS,aAAa,GAAIc,UAAD,KAAiB;AAC1CR,EAAAA,IAAI,EAAE,WADoC;AAE1CQ,EAAAA;AAF0C,CAAjB,CAAtB;AAKP,OAAO,MAAMC,mBAAmB,GAAItB,gBAAD,KAAuB;AACtDa,EAAAA,IAAI,EAAE,uBADgD;AAEtDb,EAAAA;AAFsD,CAAvB,CAA5B","sourcesContent":["import axios from \"axios\";\r\nimport { fetchProducts, fetchWriters, fetchGenres } from \"../../http/productsAPI\";\r\n\r\nexport const fetchProductsAction = (selectedWriter, selectedGenre, page, limit, searchingProduct) => (dispatch) => {\r\n    fetchProducts(selectedWriter.id, selectedGenre.id, page, limit, searchingProduct)\r\n        .then(data => {\r\n            dispatch(setProducts(data.rows));\r\n            dispatch(setTotalCount(data.count));\r\n        })\r\n}\r\n\r\nexport const fetchByCategory = () => (dispatch) => {\r\n    fetchWriters().then(data => {\r\n        dispatch(setWriter(data))\r\n    });\r\n    fetchGenres().then(data => {\r\n        dispatch(setGenre(data))\r\n    });\r\n}\r\n\r\nexport const setGenre = (genre) => ({\r\n    type: \"SET_GENRE\",\r\n    genre,\r\n})\r\n\r\nexport const setWriter = (writer) => ({\r\n    type: \"SET_WRITER\",\r\n    writer,\r\n})\r\n\r\nexport const setProducts = (products) => ({\r\n    type: \"SET_PRODUCTS\",\r\n    products,\r\n})\r\n\r\nexport const setBaskets = (baskets) => ({\r\n    type: \"SET_BASKETS\",\r\n    baskets,\r\n})\r\n\r\nexport const setSelectedGenre = (selectedGenre) => ({\r\n    type: \"SET_SELECTED_GENRE\",\r\n    selectedGenre,\r\n})\r\n\r\nexport const setSelectedWriter = (selectedWriter) => ({\r\n    type: \"SET_SELECTED_WRITER\",\r\n    selectedWriter,\r\n})\r\n\r\nexport const setPage = (page) => ({\r\n    type: \"SET_PAGE\",\r\n    page,\r\n})\r\n\r\nexport const setTotalCount = (totalCount) => ({\r\n    type: \"SET_TOTAL\",\r\n    totalCount,\r\n})\r\n\r\nexport const setSearchingProduct = (searchingProduct) => ({\r\n    type: \"SET_SEARCHING_PRODUCT\",\r\n    searchingProduct,\r\n})"]},"metadata":{},"sourceType":"module"}