{"ast":null,"code":"import { $authHost, $host } from \"./api\";\nimport jwt_decode from 'jwt-decode';\nexport const createWriter = async name => {\n  const {\n    data\n  } = await $authHost.post('product/writer', name);\n  return data;\n};\nexport const fetchWriters = async () => {\n  const {\n    data\n  } = await $host.get('product/writer');\n  return data;\n};\nexport const createGenre = async name => {\n  const {\n    data\n  } = await $authHost.post('product/genre', name);\n  return data;\n};\nexport const fetchGenres = async () => {\n  const {\n    data\n  } = await $host.get('product/genre');\n  return data;\n};\nexport const createProduct = async product => {\n  const {\n    data\n  } = await $authHost.post('product', product, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data;\n};\nexport const updateProduct = async (id, product) => {\n  const {\n    data\n  } = await $authHost.post(`product/${id}`, product, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data;\n};\nexport const fetchProducts = async function (writerId, genreId, page) {\n  let limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  let titleLowerCase = arguments.length > 4 ? arguments[4] : undefined;\n  const {\n    data\n  } = await $host.get('product', {\n    params: {\n      writerId,\n      genreId,\n      page,\n      limit,\n      titleLowerCase\n    }\n  });\n  return data;\n};\nexport const fetchOneProduct = async id => {\n  const {\n    data\n  } = await $host.get(`product/${id}`);\n  return data;\n};\nexport const deleteProduct = async id => {\n  const {\n    data\n  } = await $host.delete(`product/${id}`);\n  return data;\n};\nexport const addToBasket = async productId => {\n  const {\n    response\n  } = await $authHost.post('basket', productId);\n  return response;\n};\nexport const getBasket = async () => {\n  const {\n    data\n  } = await $authHost.get('basket');\n  return data;\n};","map":{"version":3,"sources":["D:/bookStore/client/src/http/productsAPI.js"],"names":["$authHost","$host","jwt_decode","createWriter","name","data","post","fetchWriters","get","createGenre","fetchGenres","createProduct","product","headers","updateProduct","id","fetchProducts","writerId","genreId","page","limit","titleLowerCase","params","fetchOneProduct","deleteProduct","delete","addToBasket","productId","response","getBasket"],"mappings":"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","sourcesContent":["import { $authHost, $host } from \"./api\";\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const createWriter = async (name) => {\r\n    const {data} = await $authHost.post('product/writer', name);\r\n    return data;\r\n}\r\n\r\nexport const fetchWriters = async () => {\r\n    const {data} = await $host.get('product/writer');\r\n    return data;\r\n}\r\n\r\nexport const createGenre = async (name) => {\r\n    const {data} = await $authHost.post('product/genre', name);\r\n    return data;\r\n}\r\n\r\nexport const fetchGenres = async () => {\r\n    const {data} = await $host.get('product/genre');\r\n    return data;\r\n}\r\n\r\nexport const createProduct = async (product) => {\r\n    const {data} = await $authHost.post('product', product, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const updateProduct = async (id, product) => {\r\n    const {data} = await $authHost.post(`product/${id}`, product, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const fetchProducts = async (writerId, genreId, page, limit = 5, titleLowerCase) => {\r\n    const {data} = await $host.get('product', {\r\n        params: {\r\n            writerId, genreId, page, limit, titleLowerCase\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const fetchOneProduct = async (id) => {\r\n    const {data} = await $host.get(`product/${id}`);\r\n    return data;\r\n}\r\n\r\nexport const deleteProduct = async(id) => {\r\n    const {data} = await $host.delete(`product/${id}`);\r\n    return data\r\n}\r\n\r\nexport const addToBasket = async (productId) => {\r\n    const {response} = await $authHost.post('basket', productId)\r\n    return response\r\n}\r\n\r\nexport const getBasket = async () => {\r\n    const {data} = await $authHost.get('basket')\r\n    return data\r\n}"]},"metadata":{},"sourceType":"module"}