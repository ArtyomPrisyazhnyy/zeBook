{"ast":null,"code":"var _jsxFileName = \"D:\\\\bookStore\\\\client\\\\src\\\\components\\\\AppRouter\\\\AppRouter.jsx\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Admin from '../../pages/Admin';\nimport { authRoutes, publicRoutes } from '../../routes';\nimport { SHOP_ROUTE } from '../../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = props => {\n  let state = props.userPage;\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [state.isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        render: () => {\n          /*#__PURE__*/\n          _jsxDEV(Component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 28\n          }, this);\n        },\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        render: () => /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 27\n        }, this),\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: SHOP_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["D:/bookStore/client/src/components/AppRouter/AppRouter.jsx"],"names":["React","Switch","Route","Redirect","Admin","authRoutes","publicRoutes","SHOP_ROUTE","AppRouter","props","state","userPage","console","log","isAuth","map","path","Component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,cAAzC;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAKA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,MAAIC,KAAK,GAAGD,KAAK,CAACE,QAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,sBACE,QAAC,MAAD;AAAA,eACGA,KAAK,CAACI,MAAN,IAAgBT,UAAU,CAACU,GAAX,CAAe;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BAC5B,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AACA,QAAA,MAAM,EAAE,MAAM;AAAC;AAAA,kBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAa,SAD5B;AAC8B,QAAA,KAAK;AADnC,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cAD4B;AAAA,KAAf,CADnB,EAKGV,YAAY,CAACS,GAAb,CAAiB;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACd,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AACA,QAAA,MAAM,EAAE,mBAAM,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADd;AAC4B,QAAA,KAAK;AADjC,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cADc;AAAA,KAAjB,CALH,eASE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAET;AAAd;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaH,CAjBD;;KAAMC,S;AAmBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Admin from '../../pages/Admin';\r\nimport { authRoutes, publicRoutes } from '../../routes';\r\nimport { SHOP_ROUTE } from '../../utils/consts';\r\n\r\n\r\n\r\n\r\nconst AppRouter = (props) => {\r\n    let state = props.userPage;\r\n    console.log(state)\r\n\r\n    return(\r\n      <Switch>\r\n        {state.isAuth && authRoutes.map(({path, Component}) => \r\n            <Route key={path} path={path} \r\n            render={() => {<Component/>}} exact />\r\n        )}\r\n        {publicRoutes.map(({path, Component}) => \r\n            <Route key={path} path={path} \r\n            render={() => <Component/>} exact />\r\n        )}\r\n        <Redirect to={SHOP_ROUTE} />\r\n      </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}